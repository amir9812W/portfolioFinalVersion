/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 lowpollap1.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export function LowPol(props) {
  const groupRef = useRef()
  const { nodes, materials } = useGLTF('/lowpollap1.glb')

  // Rotate the object continuously
  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y += 0.001
    }
  })

  return (
    <group
      {...props}
      ref={groupRef}
      dispose={null}
      position={[0, 0, 0]}
      rotation={[0, 0, 0]}
      onPointerDown={(e) => console.log('Object clicked!', e)}
      onPointerOver={(e) => console.log('Pointer over object!', e)}
    >
      <mesh geometry={nodes.Chassis_Chassis_0.geometry} material={materials.Chassis} />
      <mesh geometry={nodes.Screen_Screen_0.geometry} material={materials.Screen} />
      <mesh geometry={nodes.Screen_Screen_0001.geometry} material={materials['Material.001']} />
    </group>
  )
}

useGLTF.preload('/lowpollap1.glb')
